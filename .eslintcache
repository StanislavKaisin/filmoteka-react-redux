[{"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\index.tsx":"1","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\reportWebVitals.ts":"2","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\App.tsx":"3","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\AppBar.tsx":"4","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\SearchField.tsx":"5","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationList.tsx":"6","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationListHelpers\\getPagesCount.ts":"7","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationListHelpers\\splitMoviesList.ts":"8","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\ScrollTop.tsx":"9","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\Loader.tsx":"10","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\rootReducer.tsx":"11","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderReducer.ts":"12","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderTypes.ts":"13","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderActions.ts":"14","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\search\\searchReducer.ts":"15","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\search\\searchTypes.tsx":"16","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\searchResults\\searchResultsReducer.ts":"17","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\searchResults\\searchResultsTypes.ts":"18","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\sagas.ts":"19","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\apiAttributes\\apiAttributes.ts":"20","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorTypes.ts":"21","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorActions.ts":"22","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorReducer.ts":"23","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\currentPageReducer.ts":"24","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\pagesResultsTypes.ts":"25","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\currentPageActions.ts":"26","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieReducer.ts":"27","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieTypes.ts":"28","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieActions.ts":"29","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loadMovie\\loadMovieTypes.ts":"30","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loadMovie\\loadMovieReducer.ts":"31","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\MoviePage.tsx":"32","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\HomePage.tsx":"33","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\LibraryPage.tsx":"34","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryActions.ts":"35","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryTypes.ts":"36","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryReducer.ts":"37","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\LibraryButton.tsx":"38"},{"size":1109,"mtime":1617051467666,"results":"39","hashOfConfig":"40"},{"size":425,"mtime":499162500000,"results":"41","hashOfConfig":"40"},{"size":625,"mtime":1619968058240,"results":"42","hashOfConfig":"40"},{"size":1634,"mtime":1612815875009,"results":"43","hashOfConfig":"40"},{"size":2126,"mtime":1617826662185,"results":"44","hashOfConfig":"40"},{"size":6982,"mtime":1618860072937,"results":"45","hashOfConfig":"40"},{"size":424,"mtime":1617372098245,"results":"46","hashOfConfig":"40"},{"size":523,"mtime":1617372091848,"results":"47","hashOfConfig":"40"},{"size":1162,"mtime":1614369805937,"results":"48","hashOfConfig":"40"},{"size":162,"mtime":1616866455400,"results":"49","hashOfConfig":"40"},{"size":972,"mtime":1621714885425,"results":"50","hashOfConfig":"40"},{"size":460,"mtime":1616866563954,"results":"51","hashOfConfig":"40"},{"size":86,"mtime":1616787032468,"results":"52","hashOfConfig":"40"},{"size":336,"mtime":1616866303894,"results":"53","hashOfConfig":"40"},{"size":440,"mtime":1617814742530,"results":"54","hashOfConfig":"40"},{"size":45,"mtime":1616937465814,"results":"55","hashOfConfig":"40"},{"size":523,"mtime":1617215158540,"results":"56","hashOfConfig":"40"},{"size":49,"mtime":1616960023644,"results":"57","hashOfConfig":"40"},{"size":4877,"mtime":1619336436751,"results":"58","hashOfConfig":"40"},{"size":255,"mtime":1618254970151,"results":"59","hashOfConfig":"40"},{"size":82,"mtime":1617353069369,"results":"60","hashOfConfig":"40"},{"size":410,"mtime":1617556886186,"results":"61","hashOfConfig":"40"},{"size":553,"mtime":1617556697136,"results":"62","hashOfConfig":"40"},{"size":446,"mtime":1617643696197,"results":"63","hashOfConfig":"40"},{"size":104,"mtime":1617564868809,"results":"64","hashOfConfig":"40"},{"size":330,"mtime":1617815502987,"results":"65","hashOfConfig":"40"},{"size":545,"mtime":1620240150131,"results":"66","hashOfConfig":"40"},{"size":43,"mtime":1618156975921,"results":"67","hashOfConfig":"40"},{"size":278,"mtime":1618859984133,"results":"68","hashOfConfig":"40"},{"size":41,"mtime":1618777901826,"results":"69","hashOfConfig":"40"},{"size":597,"mtime":1619360638456,"results":"70","hashOfConfig":"40"},{"size":6780,"mtime":1622305090619,"results":"71","hashOfConfig":"40"},{"size":2656,"mtime":1619968083167,"results":"72","hashOfConfig":"40"},{"size":3957,"mtime":1619968073067,"results":"73","hashOfConfig":"40"},{"size":667,"mtime":1621974039731,"results":"74","hashOfConfig":"40"},{"size":174,"mtime":1621974020087,"results":"75","hashOfConfig":"40"},{"size":1352,"mtime":1622190729095,"results":"76","hashOfConfig":"40"},{"size":2569,"mtime":1622305549519,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1fjek91",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"81"},"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\index.tsx",["164"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { sagaWatcher } from \"./redux/sagas\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(saga))\n);\nsaga.run(sagaWatcher);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["165","166"],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\reportWebVitals.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\App.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\AppBar.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\SearchField.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationList.tsx",["167","168"],"import {\r\n  Card,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  createStyles,\r\n  Fab,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport React from \"react\";\r\n// { useEffect, useState }\r\n\r\nimport { ICard } from \"../interfaces/ICard\";\r\n// import { getPagesCount } from \"./PaginationListHelpers/getPagesCount\";\r\n// import { splitMoviesList } from \"./PaginationListHelpers/splitMoviesList\";\r\nimport { ScrollTop } from \"./ScrollTop\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IState } from \"../redux/rootReducer\";\r\nimport { setCurrentPage } from \"../redux/currentPage/currentPageActions\";\r\n// import { fetchMovieAction } from \"../redux/fetchMovie/fetchMovieActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { Loader } from \"./Loader\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { IState } from \"../redux/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      padding: \"1rem 0 1rem 0\",\r\n    },\r\n    root: {\r\n      margin: \"1rem\",\r\n    },\r\n    media: {\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        height: 270,\r\n        width: 180,\r\n      },\r\n      height: 450,\r\n      width: 300,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n    message: {\r\n      margin: \"1rem\",\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n      textTransform: \"uppercase\",\r\n      // fontWeight: \"bolder\",\r\n    },\r\n    pagination: {\r\n      width: \"100%\",\r\n    },\r\n    backToTopAnchor: {\r\n      height: 0,\r\n    },\r\n  })\r\n);\r\n\r\nexport interface IPaginationList {\r\n  moviesList: ICard[];\r\n}\r\n\r\nexport const PaginationList = ({ moviesList }: IPaginationList) => {\r\n  // console.log(\"PaginationList=\");\r\n  const classes = useStyles();\r\n  // const pagesCount = getPagesCount(moviesList.length);\r\n  const pagesCount = Math.ceil(\r\n    useSelector((state: IState) => state.searchResults.totalResults) / 10\r\n  );\r\n  // const splittedMoviesList = splitMoviesList(moviesList, pagesCount);\r\n  // console.log(\"moviesList\", moviesList);\r\n  // console.log(\"pagesCount\", pagesCount);\r\n  // const [displayedMoviesList, setdisplayedMoviesList] = useState(\r\n  //   splittedMoviesList[0]\r\n  // );\r\n  // useEffect(() => {\r\n  //   setdisplayedMoviesList(moviesList);\r\n  // }, [moviesList]);\r\n\r\n  // console.log(\"displayedMoviesList=\", displayedMoviesList);\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  const displayedMoviesList = moviesList;\r\n  const searchRequest = useSelector(\r\n    (state: IState) => state.search.searchRequest\r\n  );\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const handleChange = (event: React.ChangeEvent<any>, page: number) => {\r\n    // setdisplayedMoviesList(splittedMoviesList[page - 1]);\r\n    // console.log(`page`, page);\r\n    // console.log(`searchRequest`, searchRequest);\r\n    dispatch(setCurrentPage(page));\r\n  };\r\n  const handleClick = (movieId: string) => {\r\n    // dispatch(fetchMovieAction(movieId));\r\n    history.push(\"/movie/?=\" + movieId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={0}>\r\n        <Toolbar id=\"back-to-top-anchor\" className={classes.backToTopAnchor} />\r\n        <Grid container className={classes.container} spacing={2}>\r\n          <Grid\r\n            container\r\n            justify=\"center\"\r\n            direction=\"row\"\r\n            wrap=\"wrap\"\r\n            // className={classes.positionContainer}\r\n          >\r\n            {displayedMoviesList\r\n              ? displayedMoviesList.map((movie: ICard) => (\r\n                  <Grid item key={movie.imdbID} xs={12} sm={6} md={4}>\r\n                    <Card className={classes.root}>\r\n                      <CardActionArea\r\n                        onClick={() => {\r\n                          handleClick(movie.imdbID);\r\n                          console.log(`movie.imdbID`, movie.imdbID);\r\n                        }}\r\n                      >\r\n                        {movie.Poster !== \"N/A\" ? (\r\n                          <CardMedia\r\n                            image={movie.Poster}\r\n                            title={movie.Title}\r\n                            className={classes.media}\r\n                          />\r\n                        ) : (\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"caption\"\r\n                            component=\"h2\"\r\n                            align=\"center\"\r\n                            className={classes.message}\r\n                          >\r\n                            {movie.Title}, no poster\r\n                          </Typography>\r\n                        )}\r\n\r\n                        <CardContent>\r\n                          <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h2\"\r\n                            align=\"center\"\r\n                          >\r\n                            {movie.Title}\r\n                          </Typography>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                          >\r\n                            Year: {movie.Year}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                    </Card>\r\n                  </Grid>\r\n                ))\r\n              : // <Typography align=\"center\" className={classes.message}>\r\n                //   Nothing here\r\n                // </Typography>\r\n                null}\r\n          </Grid>\r\n          {displayedMoviesList.length ? (\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid\r\n              // container\r\n              // direction=\"row\"\r\n              // justify=\"center\"\r\n              // alignItems=\"center\"\r\n              // className={classes.pagination}\r\n              >\r\n                <Pagination\r\n                  count={pagesCount}\r\n                  defaultPage={1}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  size=\"large\"\r\n                  className={classes.pagination}\r\n                  onChange={(event: React.ChangeEvent<any>, page: number) =>\r\n                    handleChange(event, page)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <ScrollTop {...null}>\r\n          <Fab size=\"small\" aria-label=\"scroll back to top\">\r\n            <KeyboardArrowUpIcon />\r\n          </Fab>\r\n        </ScrollTop>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationListHelpers\\getPagesCount.ts",[],["169","170"],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\PaginationListHelpers\\splitMoviesList.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\ScrollTop.tsx",[],["171","172"],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\Loader.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\rootReducer.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loader\\loaderActions.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\search\\searchReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\search\\searchTypes.tsx",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\searchResults\\searchResultsReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\searchResults\\searchResultsTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\sagas.ts",["173","174"],"import axios from \"axios\";\r\n// import { useSelector } from \"react-redux\";\r\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  apiKey,\r\n  page,\r\n  url,\r\n  urlForCertainMovieFetch,\r\n} from \"../apiAttributes/apiAttributes\";\r\nimport { ICard } from \"../interfaces/ICard\";\r\nimport IMovie from \"../interfaces/IMovie\";\r\nimport { SET_CURRENT_PAGE } from \"./currentPage/pagesResultsTypes\";\r\nimport { hideError, showError } from \"./error/errorActions\";\r\nimport { SHOW_ERROR } from \"./error/errorTypes\";\r\nimport { IfetchMovieAction } from \"./fetchMovie/fetchMovieActions\";\r\nimport { FETCH_MOVIE } from \"./fetchMovie/fetchMovieTypes\";\r\nimport { hideLoader, showLoader } from \"./loader/loaderActions\";\r\nimport { LOAD_MOVIE } from \"./loadMovie/loadMovieTypes\";\r\nimport { IState } from \"./rootReducer\";\r\nimport { IsearchAction } from \"./search/searchReducer\";\r\n// import { IState } from \"./rootReducer\";\r\n// import { IsearchAction } from \"./search/searchReducer\";\r\nimport { SEARCH_MOVIE } from \"./search/searchTypes\";\r\nimport { FETCHED_MOVIES } from \"./searchResults/searchResultsTypes\";\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(SEARCH_MOVIE, sagaWorker);\r\n  yield takeEvery(SET_CURRENT_PAGE, sagaWorker);\r\n\r\n  yield takeEvery(FETCH_MOVIE, sagaMovieWorker);\r\n}\r\n\r\nconst delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\r\n\r\nfunction* sagaWorker(action: any) {\r\n  let currentPage = null;\r\n  let searchRequest = null;\r\n  const state: IState = yield select();\r\n  if (action.type === SEARCH_MOVIE) {\r\n    // yield put({ type: SET_CURRENT_PAGE, payload: 1 });\r\n    currentPage = 1;\r\n    searchRequest = action.payload;\r\n  }\r\n  // else {\r\n  //   console.log(`action`, action);\r\n  // }\r\n  if (action.type === SET_CURRENT_PAGE) {\r\n    // yield put({ type: SET_CURRENT_PAGE, payload: 1 });\r\n    // console.log(`action`, action);\r\n    currentPage = action.payload.currentPage;\r\n    searchRequest = state.search.searchRequest;\r\n  }\r\n  // yield console.log(`searchRequest`, searchRequest);\r\n  // yield console.log(`currentPage`, currentPage);\r\n\r\n  // yield delay(2000);\r\n  yield put(hideLoader());\r\n  try {\r\n    yield put(showLoader());\r\n    const results: ICard[] = yield call(\r\n      fetchMovies,\r\n      searchRequest,\r\n      currentPage\r\n    );\r\n    yield put({ type: FETCHED_MOVIES, payload: results });\r\n    yield put(hideLoader());\r\n  } catch (error) {\r\n    const results = { results: [], totalResults: 0 };\r\n    yield put({ type: FETCHED_MOVIES, payload: results });\r\n    yield put({ type: SHOW_ERROR, payload: error.message });\r\n    // yield put(showError(error));\r\n    yield delay(4000);\r\n    yield put({ type: SEARCH_MOVIE, payload: \"\" });\r\n    yield put({ type: SET_CURRENT_PAGE, payload: 1 });\r\n    yield put(hideError());\r\n    yield put(hideLoader());\r\n    // yield put(hideAlert());\r\n    // console.log(`error`, error);\r\n  }\r\n}\r\n\r\nfunction* sagaMovieWorker(action: IfetchMovieAction) {\r\n  try {\r\n    yield put(showLoader());\r\n    const movieId = action.payload;\r\n    const result: IMovie[] = yield call(fetchMovie, movieId);\r\n    console.log(`result`, result);\r\n    yield put({ type: LOAD_MOVIE, payload: result });\r\n    yield put(hideLoader());\r\n  } catch (error) {\r\n    const result = null;\r\n    yield put({ type: LOAD_MOVIE, payload: result });\r\n    yield put({ type: SHOW_ERROR, payload: error.message });\r\n    // yield put(showError(error));\r\n    yield delay(4000);\r\n    yield put(hideError());\r\n    yield put(hideLoader());\r\n    // yield put(hideAlert());\r\n    // console.log(`error`, error);\r\n  }\r\n}\r\n\r\n// search: string, pageNum = \"\"\r\n\r\n// eslint-disable-next-line react-hooks/rules-of-hooks\r\n// const search = useSelector((state: IState) => state.search);\r\n// const pageNum = \"\";\r\nconst fetchMovies = async (search: string, pageNum: number = 1) => {\r\n  if (!search && !pageNum) return new Error(\"Wrong search params!\");\r\n  // console.log(`search`, search);\r\n  if (!search.trim() || !search) return;\r\n  return await axios\r\n    .get(url + search + page + pageNum + apiKey)\r\n    .then((data) => {\r\n      // console.log(`data`, data);\r\n      if (data.data.Error) {\r\n        throw Error(data.data.Error);\r\n      }\r\n      if (data.data.Error) {\r\n        return {\r\n          results: [],\r\n          totalResults: 0,\r\n        };\r\n      }\r\n      return {\r\n        results: data.data.Search,\r\n        totalResults: data.data.totalResults,\r\n      };\r\n    });\r\n};\r\n\r\n// const url = \"https://www.omdbapi.com/?i=\";\r\n// const apiKey = \"&apikey=4095ed63\";\r\n// const full = \"\";\r\n//?imdbID=tt0094432\r\n\r\nconst fetchMovie = async (imdbID: string): Promise<IMovie | null> => {\r\n  // const url = \"https://www.omdbapi.com/?i=\";\r\n  if (!imdbID.trim() || !imdbID) return null;\r\n  return await axios\r\n    .get(urlForCertainMovieFetch + imdbID + apiKey)\r\n    .then((data) => {\r\n      console.log(`data`, data);\r\n      return data.data;\r\n    });\r\n};\r\n","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\apiAttributes\\apiAttributes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorActions.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\error\\errorReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\currentPageReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\pagesResultsTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\currentPage\\currentPageActions.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\fetchMovie\\fetchMovieActions.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loadMovie\\loadMovieTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\loadMovie\\loadMovieReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\MoviePage.tsx",["175","176","177","178","179","180"],"import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ICard } from \"../interfaces/ICard\";\r\nimport { fetchMovie } from \"../redux/fetchMovie/fetchMovieActions\";\r\nimport { IState } from \"../redux/rootReducer\";\r\nimport {\r\n  addToLibrary,\r\n  removeFromLibrary,\r\n} from \"../redux/library/libraryActions\";\r\nimport {\r\n  ADD_TO_LIBRARY,\r\n  ELibrary,\r\n  REMOVE_FROM_LIBRARY,\r\n} from \"../redux/library/libraryTypes\";\r\nimport { AnyMxRecord } from \"dns\";\r\nimport { LibraryButton } from \"../components/LibraryButton\";\r\n\r\n// import mockMovie from \"../mockData/mockMovie.json\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    container: {\r\n      marginTop: \"1rem\",\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"90%\",\r\n        margin: \"0 auto\",\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: { width: \"80%\" },\r\n      [theme.breakpoints.up(\"lg\")]: { width: \"75%\" },\r\n    },\r\n    descriptionContainer: {\r\n      width: \"80%\",\r\n    },\r\n    title: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    year: {\r\n      color: \"#9e9e9e\",\r\n    },\r\n    infoTitle: {\r\n      fontSize: \"1.1rem\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    votes: {\r\n      color: \"#9e9e9e\",\r\n      fontSize: \"0.9rem\",\r\n    },\r\n    barButton: {\r\n      textAlign: \"center\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        fontSize: \".6rem\",\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"default\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport const MoviePage = () => {\r\n  const theme = useTheme();\r\n  const styles = useStyles();\r\n  const matchesSm = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  // console.log(`history`, history);\r\n  // const [movie, setmovie] = useState(null);\r\n  useEffect(() => {\r\n    // console.log(`history`, history);\r\n    const movieId = history.location.search.split(\"=\")[1];\r\n    dispatch(fetchMovie(movieId));\r\n  }, []);\r\n  const movie = useSelector((state: IState) => state.movie?.movie!);\r\n  let watched = useSelector((state: IState) => state.library.watched);\r\n  // console.log(`movie`, movie);\r\n  // setmovie(useSelector((state: IState) => state.movie));\r\n  // const movie = undefined;\r\n\r\n  let isWatchedInitialState = !!watched.find(\r\n    (watched) => watched.imdbID === movie.imdbID\r\n  );\r\n  const [isWatched, setisWatched] = useState<boolean>(isWatchedInitialState);\r\n\r\n  if (!movie) return null;\r\n  const {\r\n    Poster,\r\n    Title,\r\n    Year,\r\n    Plot,\r\n    Awards,\r\n    imdbRating,\r\n    imdbVotes,\r\n    Actors,\r\n    Country,\r\n    Genre,\r\n    Runtime,\r\n    BoxOffice,\r\n    Type,\r\n    imdbID,\r\n  } = movie!;\r\n  const movieCard: ICard = { Poster, Title, Type, Year, imdbID };\r\n\r\n  // let isWatched = watched.includes(movieCard);\r\n  // // console.log(`watched=`, watched);\r\n  // console.log(`isWatched=`, isWatched);\r\n\r\n  const handleClick = (collection: string, isInLibrary: boolean) => {\r\n    console.log(\"click\");\r\n    console.log(\"collection=\", collection);\r\n    switch (collection) {\r\n      case ELibrary[0]:\r\n        isInLibrary\r\n          ? dispatch(addToLibrary(collection, movieCard))\r\n          : dispatch(removeFromLibrary(collection, movieCard));\r\n        // if (action === ADD_TO_LIBRARY) {\r\n        //   dispatch(addToLibrary(collection, movieCard));\r\n        // }\r\n        // if (action === REMOVE_FROM_LIBRARY) {\r\n        //   dispatch(removeFromLibrary(collection, movieCard));\r\n        // }\r\n        setisWatched(!isWatched);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <Grid\r\n          container\r\n          direction={matchesSm ? \"row\" : \"column\"}\r\n          alignItems={matchesSm ? \"flex-start\" : \"center\"}\r\n          wrap={matchesSm ? \"nowrap\" : \"wrap\"}\r\n          spacing={2}\r\n          className={styles.container}\r\n        >\r\n          <Grid item>\r\n            <img src={Poster} alt={Title} />\r\n          </Grid>\r\n          <Grid item className={styles.descriptionContainer}>\r\n            <Typography variant=\"h1\" className={styles.title}>\r\n              {Title}\r\n              <Typography\r\n                display=\"inline\"\r\n                className={styles.year}\r\n              >{` ${Year}`}</Typography>\r\n            </Typography>\r\n            <Typography>{Plot}</Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Awards: <Typography display=\"inline\">{Awards}</Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Rating: <Typography display=\"inline\">{imdbRating}</Typography>{\" \"}\r\n              <Typography display=\"inline\" className={styles.votes}>\r\n                {imdbVotes} votes\r\n              </Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Actors: <Typography display=\"inline\">{Actors}</Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Country: <Typography display=\"inline\">{Country}</Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Genre: <Typography display=\"inline\">{Genre}</Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Runtime: <Typography display=\"inline\">{Runtime}</Typography>\r\n            </Typography>\r\n            <Typography className={styles.infoTitle}>\r\n              Box office: <Typography display=\"inline\">{BoxOffice}</Typography>\r\n            </Typography>\r\n            <Grid\r\n              container\r\n              item\r\n              direction=\"row\"\r\n              wrap=\"nowrap\"\r\n              justify=\"space-between\"\r\n              // spacing={1}\r\n            >\r\n              <LibraryButton libraryName={ELibrary[0]} movieCard={movieCard} />\r\n              <LibraryButton libraryName={ELibrary[1]} movieCard={movieCard} />\r\n              <LibraryButton libraryName={ELibrary[2]} movieCard={movieCard} />\r\n              <Button\r\n                className={styles.barButton}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth={true}\r\n                href={`https://www.google.com/search?q=${Title}+${Year}+#movie`}\r\n                target=\"_blank\"\r\n              >\r\n                Advanced <br />\r\n                search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Typography>Error</Typography>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\HomePage.tsx",["181","182","183","184"],"import {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { PaginationList } from \"../components/PaginationList\";\r\nimport { SearchField } from \"../components/SearchField\";\r\n\r\nimport mockList from \"../mockData/mockList.json\";\r\nimport { hideLoader, showLoader } from \"../redux/loader/loaderActions\";\r\n\r\nimport { IState } from \"../redux/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    title: {\r\n      padding: \"1rem 0 1rem 0\",\r\n      fontSize: \"2.2rem\",\r\n      fontWeight: 400,\r\n      textTransform: \"uppercase\",\r\n      textAlign: \"center\",\r\n      fontFamily: \"Verdana\",\r\n    },\r\n    media: {\r\n      width: \"100%\",\r\n      height: \"initial\",\r\n    },\r\n    searchRequest: {\r\n      padding: \"1rem 0 1rem 0\",\r\n      fontSize: \"1.2rem\",\r\n      fontWeight: 400,\r\n      textTransform: \"uppercase\",\r\n      textAlign: \"center\",\r\n      fontFamily: \"Verdana\",\r\n    },\r\n  })\r\n);\r\n\r\nexport const HomePage = () => {\r\n  const classes = useStyles();\r\n  // console.log(\"mockList.Search=\", mockList.Search);\r\n  // const moviesList = mockList.Search;\r\n  const moviesList = useSelector(\r\n    (state: IState) => state.searchResults.results\r\n  );\r\n  // console.log(`moviesList`, moviesList);\r\n  let loading = useSelector((state: IState) => state.loader.loading);\r\n  let search = useSelector((state: IState) => state.search.searchRequest);\r\n  let error = useSelector((state: IState) => state.error.error);\r\n\r\n  // console.log(`loading`, loading);\r\n  const dispatch = useDispatch();\r\n  const handleClick = () => {\r\n    dispatch(showLoader());\r\n  };\r\n  const handleClick2 = () => {\r\n    dispatch(hideLoader());\r\n  };\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\" alignItems=\"center\">\r\n        <Typography variant=\"h1\" className={classes.title}>\r\n          Your Movies Library\r\n        </Typography>\r\n        <SearchField />\r\n        {/* <Button onClick={handleClick}>show loader</Button>\r\n        <Button onClick={handleClick2}>hide loader</Button> */}\r\n        {/* {loading && <Loader />} */}\r\n        {search && (\r\n          <Typography variant=\"h2\" className={classes.searchRequest}>\r\n            Results for : {search}\r\n          </Typography>\r\n        )}\r\n        {error && (\r\n          <Typography variant=\"h2\" className={classes.searchRequest}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n        {loading && <Loader />}\r\n        <PaginationList moviesList={moviesList} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\pages\\LibraryPage.tsx",["185"],"import React, { useState } from \"react\";\r\n// import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { AppBar, Box, Grid, Typography } from \"@material-ui/core\";\r\n// import SwipeableViews from \"react-swipeable-views\";\r\n\r\nimport mockList from \"../mockData/mockList.json\";\r\n// import { ICard } from \"../interfaces/ICard\";\r\nimport { PaginationList } from \"../components/PaginationList\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: { width: \"80%\" },\r\n    [theme.breakpoints.up(\"md\")]: { width: \"65%\" },\r\n  },\r\n  library: {\r\n    paddingTop: \"1rem\",\r\n  },\r\n}));\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n  index: any;\r\n  value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`full-width-tabpanel-${index}`}\r\n      aria-labelledby={`full-width-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    \"aria-controls\": `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport const LibraryPage = () => {\r\n  // console.log(\"mockList.Search\", mockList.Search);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const lists = [[], [], mockList.Search];\r\n\r\n  console.log(\"value\", value);\r\n  console.log(\"lists[value]=\", lists[value]);\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        className={classes.library}\r\n      >\r\n        <div className={classes.root}>\r\n          {/* <Paper square> */}\r\n          <AppBar position=\"static\" color=\"transparent\" elevation={0}>\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"secondary\"\r\n              textColor=\"secondary\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab\r\n                label=\"PLANNED\"\r\n                icon={<WatchLaterIcon />}\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                label=\"WATCHED\"\r\n                icon={<VisibilityIcon />}\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                label=\"FAVORITES\"\r\n                icon={<FavoriteIcon />}\r\n                {...a11yProps(2)}\r\n              />\r\n            </Tabs>\r\n          </AppBar>\r\n          {/* <SwipeableViews\r\n            axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          > */}\r\n          <TabPanel value={value} index={0} dir={theme.direction}>\r\n            <PaginationList moviesList={lists[0]} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1} dir={theme.direction}>\r\n            <PaginationList moviesList={lists[1]} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2} dir={theme.direction}>\r\n            <PaginationList moviesList={lists[2]} />\r\n          </TabPanel>\r\n          {/* </SwipeableViews> */}\r\n          {/* </Paper> */}\r\n        </div>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryActions.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryTypes.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\redux\\library\\libraryReducer.ts",[],"E:\\Code\\27-01-2021 filmoteka new\\my-app\\src\\components\\LibraryButton.tsx",["186"],"import { createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ICard } from \"../interfaces/ICard\";\r\nimport {\r\n  addToLibrary,\r\n  removeFromLibrary,\r\n} from \"../redux/library/libraryActions\";\r\nimport { ELibrary } from \"../redux/library/libraryTypes\";\r\nimport { IState } from \"../redux/rootReducer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    barButton: {\r\n      textAlign: \"center\",\r\n      minHeight: \"4rem\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        fontSize: \".6rem\",\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        fontSize: \"default\",\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nexport interface ILibraryButtonProps {\r\n  libraryName: string;\r\n  movieCard: ICard;\r\n}\r\n\r\nexport const LibraryButton = ({\r\n  libraryName,\r\n  movieCard,\r\n}: ILibraryButtonProps) => {\r\n  // console.log(\"libraryName=\", libraryName);\r\n  const styles = useStyles();\r\n  let library = useSelector((state: IState) => state.library[libraryName]);\r\n  console.log(\"libraryName in button=\", libraryName);\r\n  console.log(\"library=\", library);\r\n  console.log(\"library in button=\", library);\r\n  let isInLibraryInitialState = !!library.find(\r\n    (movie) => movie.imdbID === movieCard.imdbID\r\n  );\r\n  const [isInLibrary, setisInLibrary] = useState<boolean>(\r\n    isInLibraryInitialState\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = () => {\r\n    console.log(\"click\");\r\n\r\n    // console.log(\"collection=\", collection);\r\n    // console.log(\"isInLibrary=\", isInLibrary);\r\n\r\n    // switch (collection) {\r\n    //   case ELibrary[0]:\r\n    !isInLibrary\r\n      ? dispatch(addToLibrary(libraryName, movieCard))\r\n      : dispatch(removeFromLibrary(libraryName, movieCard));\r\n    setisInLibrary(!isInLibrary);\r\n    // if (action === ADD_TO_LIBRARY) {\r\n    //   dispatch(addToLibrary(collection, movieCard));\r\n    // }\r\n    // if (action === REMOVE_FROM_LIBRARY) {\r\n    //   dispatch(removeFromLibrary(collection, movieCard));\r\n    // }\r\n    //     setisWatched(!isWatched);\r\n    //     break;\r\n    //   default:\r\n    //     break;\r\n    // }\r\n  };\r\n  return (\r\n    <Button\r\n      className={styles.barButton}\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      fullWidth={true}\r\n      onClick={handleClick}\r\n    >\r\n      {!isInLibrary ? \"Add to\" : \"Remove from\"}\r\n      {/* Add to */}\r\n      {/* Remove from */}\r\n      <br />\r\n      {/* watched */}\r\n      {libraryName}\r\n    </Button>\r\n  );\r\n};\r\n",{"ruleId":"187","severity":1,"message":"188","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":13},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"187","severity":1,"message":"195","line":90,"column":9,"nodeType":"189","messageId":"190","endLine":90,"endColumn":16},{"ruleId":"187","severity":1,"message":"196","line":92,"column":9,"nodeType":"189","messageId":"190","endLine":92,"endColumn":22},{"ruleId":"191","replacedBy":"197"},{"ruleId":"193","replacedBy":"198"},{"ruleId":"191","replacedBy":"199"},{"ruleId":"193","replacedBy":"200"},{"ruleId":"187","severity":1,"message":"201","line":13,"column":21,"nodeType":"189","messageId":"190","endLine":13,"endColumn":30},{"ruleId":"187","severity":1,"message":"202","line":20,"column":10,"nodeType":"189","messageId":"190","endLine":20,"endColumn":23},{"ruleId":"187","severity":1,"message":"203","line":5,"column":3,"nodeType":"189","messageId":"190","endLine":5,"endColumn":13},{"ruleId":"187","severity":1,"message":"204","line":24,"column":3,"nodeType":"189","messageId":"190","endLine":24,"endColumn":17},{"ruleId":"187","severity":1,"message":"205","line":26,"column":3,"nodeType":"189","messageId":"190","endLine":26,"endColumn":22},{"ruleId":"187","severity":1,"message":"206","line":28,"column":10,"nodeType":"189","messageId":"190","endLine":28,"endColumn":21},{"ruleId":"207","severity":1,"message":"208","line":87,"column":6,"nodeType":"209","endLine":87,"endColumn":8,"suggestions":"210"},{"ruleId":"187","severity":1,"message":"211","line":122,"column":9,"nodeType":"189","messageId":"190","endLine":122,"endColumn":20},{"ruleId":"187","severity":1,"message":"212","line":2,"column":3,"nodeType":"189","messageId":"190","endLine":2,"endColumn":9},{"ruleId":"187","severity":1,"message":"213","line":16,"column":8,"nodeType":"189","messageId":"190","endLine":16,"endColumn":16},{"ruleId":"187","severity":1,"message":"211","line":60,"column":9,"nodeType":"189","messageId":"190","endLine":60,"endColumn":20},{"ruleId":"187","severity":1,"message":"214","line":63,"column":9,"nodeType":"189","messageId":"190","endLine":63,"endColumn":21},{"ruleId":"187","severity":1,"message":"215","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"216","line":10,"column":10,"nodeType":"189","messageId":"190","endLine":10,"endColumn":18},"@typescript-eslint/no-unused-vars","'thunk' is defined but never used.","Identifier","unusedVar","no-native-reassign",["217"],"no-negated-in-lhs",["218"],"'matches' is assigned a value but never used.","'searchRequest' is assigned a value but never used.",["217"],["218"],["217"],["218"],"'showError' is defined but never used.","'IsearchAction' is defined but never used.","'IconButton' is defined but never used.","'ADD_TO_LIBRARY' is defined but never used.","'REMOVE_FROM_LIBRARY' is defined but never used.","'AnyMxRecord' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history.location.search'. Either include them or remove the dependency array.","ArrayExpression",["219"],"'handleClick' is assigned a value but never used.","'Button' is defined but never used.","'mockList' is defined but never used.","'handleClick2' is assigned a value but never used.","'useState' is defined but never used.","'ELibrary' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [dispatch, history.location.search]",{"range":"222","text":"223"},[2203,2205],"[dispatch, history.location.search]"]